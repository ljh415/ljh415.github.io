---

layout: post
title:  "임베디드 SW 경진대회"
subtitle: "시각장애인을 위한 스마트 보행도우미"
date:   2020-07-20 23:56:45
categories: [raspberry-pi, machinelearning]

---

# 임베디드 SW 경진대회

# 시각장애인을 위한 스마트 보행도우미

- 9월달은 보고서 작성

- 할일
    1. 안드로이드
    2. 서버, DB구성
    3. 젯슨 나노 포팅
    4. 데이터학습
    5. 초음파 센서 연결
    6. 디자인부분
    7. 보고서 작성

[데이터셋 convert](%E1%84%8B%E1%85%B5%E1%86%B7%E1%84%87%E1%85%A6%E1%84%83%E1%85%B5%E1%84%83%E1%85%B3%20SW%20%E1%84%80%E1%85%A7%E1%86%BC%E1%84%8C%E1%85%B5%E1%86%AB%E1%84%83%E1%85%A2%E1%84%92%E1%85%AC%200b4cfc672c294c6091db340a431dca5d/%E1%84%83%E1%85%A6%E1%84%8B%E1%85%B5%E1%84%90%E1%85%A5%E1%84%89%E1%85%A6%E1%86%BA%20convert%20d66fccd3803346afb384c1875a84e18f.md)

[학습..](%E1%84%8B%E1%85%B5%E1%86%B7%E1%84%87%E1%85%A6%E1%84%83%E1%85%B5%E1%84%83%E1%85%B3%20SW%20%E1%84%80%E1%85%A7%E1%86%BC%E1%84%8C%E1%85%B5%E1%86%AB%E1%84%83%E1%85%A2%E1%84%92%E1%85%AC%200b4cfc672c294c6091db340a431dca5d/%E1%84%92%E1%85%A1%E1%86%A8%E1%84%89%E1%85%B3%E1%86%B8%20db2883b22b0843fab95557c346bc298a.md)

[Pre-processing](%E1%84%8B%E1%85%B5%E1%86%B7%E1%84%87%E1%85%A6%E1%84%83%E1%85%B5%E1%84%83%E1%85%B3%20SW%20%E1%84%80%E1%85%A7%E1%86%BC%E1%84%8C%E1%85%B5%E1%86%AB%E1%84%83%E1%85%A2%E1%84%92%E1%85%AC%200b4cfc672c294c6091db340a431dca5d/Pre-processing%20fccba3c377f74200b17d63dcda76f1ab.md)

[VOC label format](%E1%84%8B%E1%85%B5%E1%86%B7%E1%84%87%E1%85%A6%E1%84%83%E1%85%B5%E1%84%83%E1%85%B3%20SW%20%E1%84%80%E1%85%A7%E1%86%BC%E1%84%8C%E1%85%B5%E1%86%AB%E1%84%83%E1%85%A2%E1%84%92%E1%85%AC%200b4cfc672c294c6091db340a431dca5d/VOC%20label%20format%20dc0554e7e9314c08bea38a14a75c1a83.md)

## 진도

---

- CV

    +.  digits 환경 구축 (Dataset 만들기, model 만들기, 학습 할때 사용) → 완료

    - docker, cuda, cudnn, digits

    1. data준비
        - 데이터 받기 → 완료
        - xml 파싱해서 label 만들기 → 완료
        - Digits 에서 데이터셋 만들기
    2. 모델 준비 및 학습
        - Digits에서 준비 및 학습
            - 학습시키는데 프레임워크가 기존에 TensorFlow가 아닌 Caffe라서 많이 더디다
        - DetectNet protxt raw code를 데이터에 맞게 수정하기
            - Caffe 기본 문법 익히기
            - input layer 4개 (train_label, data / val_label, data)
            - lmdb파일 만들어서 input으로 지정하기
            - batch size = 1
        - 파라미터 설정 (lr, batch_size 등)
    3. Jetson Nano에 포팅하기

- Android (작성 ㄱㄱ)

[https://www.github.com/dusty-nv/jetson-inference/tree/master/docs%2Fpytorch-ssd.md](https://www.github.com/dusty-nv/jetson-inference/tree/master/docs%2Fpytorch-ssd.md)

---

이동체... → jetson(detectoin + 초음파) → 비프음 (앞 사람들에게 경고음 발생)

고정체... → jetson(detection) + 지팡이 (초음파) → 안드로이드 (TTS)

![%E1%84%8B%E1%85%B5%E1%86%B7%E1%84%87%E1%85%A6%E1%84%83%E1%85%B5%E1%84%83%E1%85%B3%20SW%20%E1%84%80%E1%85%A7%E1%86%BC%E1%84%8C%E1%85%B5%E1%86%AB%E1%84%83%E1%85%A2%E1%84%92%E1%85%AC%200b4cfc672c294c6091db340a431dca5d/Untitled.png](%E1%84%8B%E1%85%B5%E1%86%B7%E1%84%87%E1%85%A6%E1%84%83%E1%85%B5%E1%84%83%E1%85%B3%20SW%20%E1%84%80%E1%85%A7%E1%86%BC%E1%84%8C%E1%85%B5%E1%86%AB%E1%84%83%E1%85%A2%E1%84%92%E1%85%AC%200b4cfc672c294c6091db340a431dca5d/Untitled.png)

- 핸드폰
- 보조배터리
- 젯슨
- adapter
- 카메라
- 초음파센서

1. 목적 : 길안내
2. 사람 (이동체) 같은 경우는 비프음으로 경고함으로써 알려주고
3. 장애물(고정체) 같은 경우는 객체인식을 통해서 보행자에게 알려준다

- 서버?
    - 젯슨나노에 구성
    - 다루는 데이터 → 초음파센서값, 디텍션 결과
    - 안드로이드에 전달하기 위해서
        - 뭘 전달할까
        - 고정체 + 초음파 센서 데이터를 안드로이드에 전달해준다...
        - 볼라드(그거), 나무, 벤치, .....
        - 이러한 정보들을 db에 저장시킬 이유가 있나?
            - 안드로이드에서 TTS를 활용해서 정보를 전달하기 위해서는 DB가 필요
    - RestAPI

 

- 할일은..
    - VOC 데이터셋으로 만든다..

<bold> aa </bold>